{{!-- <form id="container-Form"style="padding-top:20px " method="POST" action="/items/formAction"> --}}

    <h3>Vật Phẩm đã xoá</h3>
    <a href="/me/stored/items">Quay lại</a>

    <div class="mt-3 ml-3 d-flex align-items-center">
        <div class="form-check form-check-inline">
            <input type="checkbox" class="form-check-input" id="checkbox-All">
            <label class="form-check-label" for="checkbox-All">Chọn tất cả</label>
        </div>

        <select class="form-control form-control-sm selectAllCheckbox"style="width:165px;height:40px; margin-right:2px" required>
            <option value="">--Hành động--</option>
            <option value="fix">--Khôi phục--</option>
            <option value="permanentlyDelete">--Xoá vĩnh viễn--</option>
        </select>

        <button id="btnCheckSubmit" type="click" class=" btn btn-primary btn-sm"style="padding: .375rem .75rem" disabled>
          Thực hiện
        </button>
    </div>

    <table class="table mt-2">
        <thead>
            <tr>
                <th scope="col"></th>
                <th scope="col">STT</th>
                <th scope="col">Tên vật phẩm</th>
                <th scope="col">Ngày xoá</th>
                <th scope="col" class="text-center">Thao tác</th>
            </tr>
        </thead>
        <tbody >
            {{#each items}}
              <tr>
                  <th>
                    <div class="form-check">
                      <input type="checkbox" class="form-check-input" data="courseIds" value="{{this._id}}">
                    </div>
                  </th>

                  <th style="padding-top:15px" scope="row">{{sum @index 1}}</th>
                  {{!-- sum là hàm tính tổng ở trong file index @index là đối số thứ nhất, số 1 là dối số thứ hai}}--}}
                  <th style="padding-top:15px">
                      <a href="/items/{{this.slug}}">
                          <div>{{this.name}}</div>
                      </a>
                  </th>

                  <td style="padding-top:15px">{{date this.deletedAt}}</td>                    

                  <td class="text-center">
                      <a href="" class="btn btn-info btn-restore"data-id="{{this._id}}">Khôi phục</a>
                      {{!-- phải lấy được id thì mới xoá được (data-id) --}}
                      <a class="btn btn-danger" href="" data-toggle="modal" data-id="{{this._id}}" data-target="#delete-course">Xoá vĩnh viễn</a>
                  </td>
              </tr>
            {{else}}
              <tr >
                <td class="text-center " colspan="5" style="padding-left: 68px">
                  Thùng rác rỗng.
                  <a href="/me/stored/courses"style="color: blue;">Trở lại danh sách vật phẩm</a>
                </td>
              </tr>
            {{/each}}
        </tbody>
    </table>
{{!-- </form> --}}

{{!-- confirm delete course hộp thoại xoá 
        cần có id từng cái course cần xoá id của nó là data-target 
        sau đó chạy đoạn js để thêm action xoá        
--}}
<div class="modal fade" id="delete-course" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Xoá vật phẩm ?</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p>Bạn có chắc chắc xoá vật phẩm này không</p>
      </div>
      <div class="modal-footer">        
        <button id="btn-delete-course" type="button" class="btn btn-danger">Xoá bỏ</button>
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Huỷ</button>
      </div>
    </div>
  </div>
</div>

{{!-- delete form--}}
<form method="POST" name="delete-form"></form>
{{!-- restoreCourse --}}
<form method="POST" name="restore-form"></form>

<script>
    document.addEventListener("DOMContentLoaded", function(){
        let courseId;
        // lấy form xoá 
        let deleteForm = document.forms['delete-form']; 
        // lấy course cần xoá 
        let btnDeleteCourse = document.getElementById("btn-delete-course");

        // lấy nút khôi phục
        let btnRestore =$('.btn-restore')
        // lấy form cần khôi phục
        let restoreForm = document.forms['restore-form'];

        // lấy ra id cần xoá
        $('#delete-course').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget) // Button that triggered the modal
            courseId = button.data('id') // Extract info from data-* attributes
        })
        // khi click vào xoá form xoá sẽ thêm action = ...
        // deleteForm.submit() dùng để submit vào form xoá và thực hiện xoá course trên database
        btnDeleteCourse.onclick = function(){
            deleteForm.action = '/items/' + courseId + '/permanentlyDelete?_method=DELETE'
            deleteForm.submit()
        }

        //Khôi phục
        btnRestore.click(function(e) {
            e.preventDefault();
            courseId = $(this).data("id")
            restoreForm.action = '/items/' + courseId + '/restore?_method=PATCH'
            restoreForm.submit()
        })
    })
</script>

<script>
    document.addEventListener("DOMContentLoaded", function(){
        let checkboxAll = $("#checkbox-All")
        let checkItemBox = $('.form-check-input[data="courseIds"]')
        let btnCheckSubmit = $("#btnCheckSubmit")
        /*let containerForm = $("#container-form") */

        checkboxAll.change(function() { 
            let isCheckedAll = $(this).prop("checked");
            checkItemBox.prop("checked", isCheckedAll);
            renderCheckSubmitBtn();
        })

        checkItemBox.change(function() {
            let isCheckedAll = checkItemBox.length === $('.form-check-input[data="courseIds"]:checked').length
            checkboxAll.prop("checked", isCheckedAll);
            renderCheckSubmitBtn();
        })

        function renderCheckSubmitBtn(){
            let CheckedCount = $('.form-check-input[data="courseIds"]:checked').length;
            if (CheckedCount > 0) {
              let selectAllCheckbox = $('.selectAllCheckbox')
              if(selectAllCheckbox.val()){
                btnCheckSubmit.attr("disabled",false);                
              }
              else{
                selectAllCheckbox.change(function(e){
                  let CheckedCount = $('.form-check-input[data="courseIds"]:checked').length
                  if(CheckedCount>0){
                    if(this.value){
                      btnCheckSubmit.attr("disabled",false);                
                    }
                    else{
                      btnCheckSubmit.attr("disabled",true);
                    }
                  }
                  else{
                    btnCheckSubmit.attr("disabled",true);
                  }
                })
              }
            }
            else {
              btnCheckSubmit.attr("disabled",true);
            }
        }
   
        /*containerForm.on("submit",function(e) {
            let isSubmitable = !$(btnCheckSubmit).hasClass("disabled");
            if(!isSubmitable) {
              e.preventDefault();
            }
        })*/
        $("#btnCheckSubmit").click(function(e) {
          let isChecked = document.querySelectorAll('.form-check-input[data="courseIds"]:checked')
          let itemIds = []
          for(Checked of isChecked){
            itemIds.push(Checked.value);
          }
          let action = $(".selectAllCheckbox").val()
          let text=""
          let background=""
          if(action =="permanentlyDelete"){
            text="Vật phẩm đã được xoá!"
            background= "linear-gradient(to right, green, green)"
          }
          else if(action =="fix"){
            text="Vật phẩm khôi phục lại!"
            background= "linear-gradient(0, #33aafe, #2df5ec)"
          }
          else{
            text="Chức năng này đang được cập nhật, hãy thử lại sau!"
            background= "linear-gradient(to right, red, red)"
          }
          $.ajax({
            url: `/items/formAction`,
            type: "POST",
            data:{itemIds: itemIds, action: action},
            success: (data) => {
                Toastify({
                    text: text,
                    duration: -1,
                    destination: "http://localhost:3000/",
                    newWindow: true,
                    //close: true,
                    offset: {
                        x: 50, // horizontal axis - can be a number or a string indicating unity. eg: '2em'
                        y: 10 // vertical axis - can be a number or a string indicating unity. eg: '2em'
                    },
                    gravity: "top", // `top` or `bottom`
                    position: "center", // `left`, `center` or `right`
                    stopOnFocus: true, // Prevents dismissing of toast on hover
                    style: {
                        background: background,
                    },
                    onClick: function(){} // Callback after click
                }).showToast();
                
                setTimeout(() => {
                    location.reload();
                }, "1000")
            }
        });
      })
    })
</script>