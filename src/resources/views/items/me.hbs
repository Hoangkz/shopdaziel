{{!-- <form name="container-form" style="padding-top:20px; min-height:300px;" method="POST" action="/items/formAction"> --}}
    <div class="d-flex flex-end d-flex justify-content-between" >
        <h3>Vật phẩm của tôi</h3>
        <a class="btn btn-primary" href="/items/create" role="button">Đăng vật phẩm</a>
    </div>
    

    {{!-- {{#if deleteCount}} --}}
    <a href="/me/trash/items">
        <i class="fa-solid fa-trash"></i>
        Thùng rác 
        ({{this.deleteCount}})
    </a>
    <div class="d-flex" style="justify-content: space-between;">
      <div class="mt-3 ml-3 d-flex align-items-center">
          <div class="form-check form-check-inline">
              <input type="checkbox" class="form-check-input" id="checkbox-All">
              <label class="form-check-label"for="checkbox-All">Chọn tất cả</label>
          </div>
            <select class="form-control form-control-sm selectAllCheckbox"style="width:165px;height:40px; margin-right:2px" required>
                <option value="">--Hành động--</option>
                <option value="mua">--Đặt hàng--</option>
                <option value="delete">--Xoá--</option>
            </select>
            <button id="btnCheckSubmit"type="click" class=" btn btn-primary btn-sm "style="padding: .375rem .75rem" disabled>
              Thực hiện
            </button>
      </div>
      <div class="mt-3 ml-3 d-flex align-items-center">
        <form action="" method="get" class="d-flex m-0" style="height: 40px;">
          <input type="text" id="item-search" name="search" style="height: 100%;margin: 0;"value="{{search}}" placeholder="Tên sản phẩm">
          <button type="submit" class="btn btn-primary ml-2"style="height: 100%;">Search</button>
        </form>
      </div>
    </div>
    <table class="table mt-2">
        <thead>
            <tr>
                <th scope="col"></th>
                <th scope="col">STT</th>
                <th scope="col">Tên vật phẩm</th>
                <th scope="col" style="text-align: center;">Ảnh</th>
                <th scope="col">Số lượng</th>
                <th scope="col">Đơn giá</th>
                <th scope="col">Ngày tạo</th>
                <th scope="col" class="text-center">Thao tác</th>
            </tr>
        </thead>
        <tbody >
            {{#each items}}
              <tr>
                  <td>
                    <div class="form-check">
                      <input type="checkbox" class="form-check-input" data="courseIds" value="{{this._id}}">
                    </div>
                  </td>
                  <th style="padding-top:15px" scope="row">{{sum @index 1}}</th>
                  {{!-- sum là hàm tính tổng ở trong file index @index là đối số thứ nhất, số 1 là dối số thứ hai}}--}}
                  <th style="padding-top:15px">
                      <a href="/items/{{this.name}}">
                          <div>{{this.name}}</div>
                      </a>
                  </th>
                  <td style="display: flex;justify-content: center;"><img src="{{this.img}}" width="60px" alt=""></td>
                  <td style="padding-top:15px">{{this.soluong}}</td>
                  <td style="padding-top:15px">{{this.gia}}</td>
                  <td style="padding-top:15px">{{date this.createdAt}}</td>                    

                  <td class="text-center">
                      <a href="/items/{{this._id}}/edit" class="btn btn-success">
                          Update
                      </a>
                      {{!-- phải lấy được id thì mới xoá được (data-id) --}}
                      <a class="btn btn-danger" href="" data-toggle="modal" data-id="{{this._id}}" data-target="#delete-course">
                        Delete
                      </a>
                  </td>
              </tr>
            {{else}}
              <tr>
                <td class="text-center" colspan="5">
                  Bạn chưa có vật phẩm nào.
                  <a href="/items/create"style="color: blue;">Đăng vật phẩm</a>
                </td>
              </tr>
            {{/each}}
        </tbody>
    </table>
{{!-- </form> --}}
<nav id="navPage" style="margin:10px 0 0 0 ;" aria-label="Page navigation example">
    <ul id="ulPagination" class="pagination" style="margin:0; justify-content:center">
        <script>
            let ulPagination = document.getElementById("ulPagination");
            let pageLength = {{ pageLength }}// Math.ceil({{pageLength}}/16);
            let currentPage = {{ currentPage }}
            let itemSearch =$("#item-search").val();
            let search = ""
            if(itemSearch){
              search = `search=${itemSearch}&&`
            }
            let html = `<li id="previous" class="page-item ">
                            <a class="page-link" href="?${search}page=`+ (currentPage - 1) + `#PageNavigation" tabindex="-1">
                                <span aria-hidden="true" style="font-size: 16px;">&laquo;</span>
                            </a>
                        </li>`;
            for (let i = 0; i < pageLength; i++) {
                html = html + `<li class="page-item liPageItem">
                                <a class="page-link" href="?${search}page=`+ (i + 1) + `#PageNavigation">` + (i + 1) + `</a>
                            </li>`
            }
            html = html + `<li id="nextPage" class="page-item">
                            <a class="page-link" href="?${search}page=`+ (currentPage + 1) + `#PageNavigation">
                                <span aria-hidden="true" style="font-size: 16px;">&raquo;</span>
                            </a>
                        </li>`
            ulPagination.innerHTML = html

            let previous = document.getElementById("previous");
            let nextPage = document.getElementById("nextPage");
            if (pageLength === 1) {
                previous.classList.add("disabled");
                nextPage.classList.add("disabled");
            }
            else if (currentPage <= 1) {
                previous.classList.add("disabled");
            }
            else if (currentPage >= pageLength) {
                nextPage.classList.add("disabled");
            }
            else {
                previous.classList.remove("disabled");
                nextPage.classList.remove("disabled");
            }
            let liPageItem = document.getElementsByClassName("liPageItem")
            liPageItem[currentPage - 1].classList.add("disabled")
        </script>
    </ul>
</nav>
<script>
    let nullItem = document.getElementById("nullItem");
    let navPage = document.getElementById("navPage");
    if (nullItem) {
        navPage.classList.add("displayNone");
    }
</script>
<style>
    .displayNone {
        display: none;
    }
</style>
{{!-- confirm delete course hộp thoại xoá 
        cần có id từng cái course cần xoá id của nó là data-target 
        sau đó chạy đoạn js để thêm action xoá        
--}}
<div class="modal fade" id="delete-course" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Xoá vật phẩm ?</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p>Bạn có chắc chắc xoá vật phẩm này không</p>
      </div>
      <div class="modal-footer">        
        <button id="btn-delete-course" type="button" class="btn btn-danger" >Xoá bỏ</button>
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Huỷ</button>
      </div>
    </div>
  </div>
</div>

{{!-- delete form--}}
<form method="POST" name="delete-form"></form>

<script>
    document.addEventListener("DOMContentLoaded", function(){
        let courseId;
        // lấy form xoá 
        let deleteForm = document.forms['delete-form']; 
        // lấy course cần xoá 
        let btnDeleteCourse = document.getElementById("btn-delete-course");

        // lấy ra id cần xoá
        $('#delete-course').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget) // Button that triggered the modal
            courseId = button.data('id') // Extract info from data-* attributes
        })
        // khi click vào xoá form xoá sẽ thêm action = ...
        // deleteForm.submit() dùng để submit vào form xoá và thực hiện xoá course trên database
        btnDeleteCourse.onclick = function(){
            deleteForm.action = '/items/' + courseId + '?_method=DELETE'
            deleteForm.submit()
        }
    })
</script>

{{!-- checkbox --}}
<script>
    document.addEventListener("DOMContentLoaded", function(){
        let checkboxAll = $("#checkbox-All")
        let courseItemCheckbox =$('.form-check-input[data="courseIds"]')
        let btnCheckSubmit = $("#btnCheckSubmit")

        /*let containerForm = $("container-form")*/
        //checkboxAll change

        checkboxAll.change(function(e){
          let isCheckedAll = $(this).prop("checked");
          courseItemCheckbox.prop("checked", isCheckedAll);
          renderCheckSubmitBtn();
          e.preventDefault();
        })
        
        //course Items Checkbox change
        courseItemCheckbox.change(function(e){
          let isChecked = courseItemCheckbox.length === $('.form-check-input[data="courseIds"]:checked').length;       
          checkboxAll.prop("checked", isChecked);
          renderCheckSubmitBtn();
          e.preventDefault();
        });

        //hiện button khi click vào checkbox
        function renderCheckSubmitBtn(){
            let CheckedCount = $('.form-check-input[data="courseIds"]:checked').length;
            if (CheckedCount > 0) {
              let selectAllCheckbox = $('.selectAllCheckbox')
              if(selectAllCheckbox.val()){
                btnCheckSubmit.attr("disabled",false);                
              }
              else{
                selectAllCheckbox.change(function(e){
                  let CheckedCount = $('.form-check-input[data="courseIds"]:checked').length
                  if(CheckedCount>0){
                    if(this.value){
                      btnCheckSubmit.attr("disabled",false);                
                    }
                    else{
                      btnCheckSubmit.attr("disabled",true);
                    }
                  }
                  else{
                    btnCheckSubmit.attr("disabled",true);
                  }
                })
              }
            }
            else {
              btnCheckSubmit.attr("disabled",true);
            }
        }

        /*btnCheckSubmit.click(function(e){
            e.preventDefault();
            let isSubmitable = !$(this).hasClass("disabled");
            if(isSubmitable) {
                containerForm.submit();
            }
        }) */
        /*btnCheckSubmit.on("submit", function(e) {
            let isSubmitable = $(this).hasClass("disabled");

            if(isSubmitable) {
              e.preventDefault();
            }  
        })
        /*containerForm.on("submit",function(e) {
            let isSubmitable = !$(btnCheckSubmit).hasClass("disabled");
            if(!isSubmitable) {
              e.preventDefault();
            }
        })*/
      $("#btnCheckSubmit").click(function(e) {
          let isChecked = document.querySelectorAll('.form-check-input[data="courseIds"]:checked')
          let itemIds = []
          for(Checked of isChecked){
            itemIds.push(Checked.value);
          }
          let action = $(".selectAllCheckbox").val()
          let text=""
          let background=""
          if(action =="delete"){
            text="Vật phẩm đã được chuyển vào thùng rác!"
            background= "linear-gradient(to right, green, green)"
          }
          else{
            text="Chức năng này đang được cập nhật, hãy thử lại sau!"
            background= "linear-gradient(to right, red, red)"
          }
          $.ajax({
            url: `/items/formAction`,
            type: "POST",
            data:{itemIds: itemIds, action: action},
            success: (data) => {
                Toastify({
                    text: text,
                    duration: -1,
                    destination: "http://localhost:3000/",
                    newWindow: true,
                    //close: true,
                    offset: {
                        x: 50, // horizontal axis - can be a number or a string indicating unity. eg: '2em'
                        y: 10 // vertical axis - can be a number or a string indicating unity. eg: '2em'
                    },
                    gravity: "top", // `top` or `bottom`
                    position: "center", // `left`, `center` or `right`
                    stopOnFocus: true, // Prevents dismissing of toast on hover
                    style: {
                        background: background,
                    },
                    onClick: function(){} // Callback after click
                }).showToast();
                
                setTimeout(() => {
                    location.reload();
                }, "1000")
            }
        });
      })
    })
</script>