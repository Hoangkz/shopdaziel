  <div class="d-flex flex-end d-flex justify-content-between">
    <h3>Danh sách Account</h3>
  </div>

  <div class="mt-3 ml-3 d-flex align-items-center">
    <div class="form-check form-check-inline">
      <input type="checkbox" class="form-check-input" id="checkbox-All">
      <label class="form-check-label" for="checkbox-All">Chọn tất cả</label>
    </div>

    <select class="form-control form-control-sm selectAllCheckbox" style="width:165px;height:40px; margin-right:2px"required>
      <option value="">--Hành động--</option>
      <option value="permanentlyDelete">--Xoá--</option>
    </select>

    <button id="btnCheckSubmit" class=" btn btn-primary btn-sm"style="padding: .375rem .75rem;" disabled>
      Thực hiện
    </button>
  </div>
  <table class="table mt-2">
    <thead>
      <tr>
        <th scope="col"></th>
        <th scope="col">STT</th>
        <th scope="col">Tên đăng nhập</th>
        <th scope="col">Họ và tên</th>
        <th scope="col">Ngày sinh</th>
        <th scope="col">Email</th>
        <th scope="col">Số điện thoại</th>
        <th scope="col">Loại tài khoản</th>
        <th scope="col" class="text-center">Thao tác</th>
        <th scope="col"></th>
      </tr>
    </thead>
    <tbody>
      {{#each user}}

      <tr>
        <td>
          <div class="form-check">
            <input type="checkbox" class="form-check-input" data="courseIds" value="{{this._id}}">
          </div>
        </td>
        <th style="padding-top:15px;" scope="row">{{sum @index 1}}</th>
        <th style="padding-top:15px;">
          <a href="/users/{{this._id}}">{{this.username}}
          </a>
        </th>

        <td style="padding-top:15px">{{this.fullname}}</td>
        <td style="padding-top:15px">{{date1 this.birthday}}</td>
        <td style="padding-top:15px">{{this.extname}}</td>
        <td style="padding-top:15px">{{this.tell}}</td>
        <td class="userRole" style="padding-top:15px" value="{{this.role}}"></td>

        <td class="text-center">
          <a href="/users/{{this._id}}" class="btn btn-success">
            <i class="fa-solid fa-screwdriver-wrench"></i>
          </a>
          {{!-- phải lấy được id thì mới xoá được (data-id) --}}
          <a class="btn btn-danger" href="" data-toggle="modal" data-id="{{this._id}}" data-target="#delete-course">
            <i class="fa-solid fa-trash"></i>
          </a>
        </td>
      </tr>
      {{else}}
      <tr>
        <td class="text-center" colspan="5">
          Bạn chưa có Account nào.
        </td>
      </tr>
      {{/each}}
    </tbody>
  </table>
<script>
  let userRole = document.querySelectorAll(".userRole");
  for (i of userRole) {
    if (i.attributes.value.value === "3") {
      i.innerHTML = "Admin"
    }
    else if (i.attributes.value.value === "2") {
      i.innerHTML = "Nhân viên"
    }
    else {
      i.innerHTML = "Khách hàng"
    }
  }
</script>

<div class="modal fade" id="delete-course" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
  aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Xoá Account ?</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p>Bạn có chắc chắc xoá Account này không</p>
      </div>
      <div class="modal-footer">
        <button id="btn-delete-course" type="button" class="btn btn-danger">Xoá bỏ</button>
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Huỷ</button>
      </div>
    </div>
  </div>
</div>

{{!-- delete form--}}
<form method="POST" name="delete-form"></form>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    let accountId;
    // lấy form xoá 
    let deleteForm = document.forms['delete-form'];
    // lấy course cần xoá 
    let btnDeleteCourse = document.getElementById("btn-delete-course");

    // lấy ra id cần xoá
    $('#delete-course').on('show.bs.modal', function (event) {
      var button = $(event.relatedTarget) // Button that triggered the modal
      accountId = button.data('id') // Extract info from data-* attributes
    })
    // khi click vào xoá form xoá sẽ thêm action = ...
    // deleteForm.submit() dùng để submit vào form xoá và thực hiện xoá course trên database
    btnDeleteCourse.onclick = function () {
      deleteForm.action = '/items/' + accountId + '?_method=DELETE'
      deleteForm.submit()
    }
  })
</script>

{{!-- checkbox --}}
<script>
    document.addEventListener("DOMContentLoaded", function(){
        let checkboxAll = $("#checkbox-All")
        let courseItemCheckbox =$('.form-check-input[data="courseIds"]')
        let btnCheckSubmit = $("#btnCheckSubmit")

        let containerForm = $("container-form")
        //checkboxAll change
        checkboxAll.change(function(){
          let isCheckedAll = $(this).prop("checked");
          courseItemCheckbox.prop("checked", isCheckedAll);
          renderCheckSubmitBtn();
        })
        
        //course Items Checkbox change
        courseItemCheckbox.change(function(){
          let isChecked = courseItemCheckbox.length === $('.form-check-input[data="courseIds"]:checked').length;       
          checkboxAll.prop("checked", isChecked);
          renderCheckSubmitBtn();
        });

        //hiện button khi click vào checkbox
        function renderCheckSubmitBtn(){
            let CheckedCount = $('.form-check-input[data="courseIds"]:checked').length;
            if (CheckedCount > 0) {
              let selectAllCheckbox = $('.selectAllCheckbox')
              if(selectAllCheckbox.val()){
                btnCheckSubmit.attr("disabled",false);                
              }
              else{
                selectAllCheckbox.change(function(e){
                  let CheckedCount = $('.form-check-input[data="courseIds"]:checked').length
                  if(CheckedCount>0){
                    if(this.value){
                      btnCheckSubmit.attr("disabled",false);                
                    }
                    else{
                      btnCheckSubmit.attr("disabled",true);
                    }
                  }
                  else{
                    btnCheckSubmit.attr("disabled",true);
                  }
                })
              }
            }
            else {
              btnCheckSubmit.attr("disabled",true);
            }
        }
        $("#btnCheckSubmit").click(function(e) {
          let isChecked = document.querySelectorAll('.form-check-input[data="courseIds"]:checked')
          let userIds = []
          for(Checked of isChecked){
            userIds.push(Checked.value);
          }
          let action = $(".selectAllCheckbox").val()
          let text=""
          let background=""
          if(action =="permanentlyDelete"){
            text="Đã xoá tài khoản thành công!"
            background= "linear-gradient(to right, green, green)"
          }
          else if(action =="fix"){
            text="Vật phẩm khôi phục lại!"
            background= "linear-gradient(0, #33aafe, #2df5ec)"
          }
          else{
            text="Chức năng này đang được cập nhật, hãy thử lại sau!"
            background= "linear-gradient(to right, red, red)"
          }
          $.ajax({
            url: `/users/formUsers`,
            type: "POST",
            data:{userIds: userIds, action: action},
            success: (data) => {
                Toastify({
                    text: text,
                    duration: 2000,
                    destination: "http://localhost:3000/",
                    newWindow: true,
                    //close: true,
                    offset: {
                        x: 50, // horizontal axis - can be a number or a string indicating unity. eg: '2em'
                        y: 10 // vertical axis - can be a number or a string indicating unity. eg: '2em'
                    },
                    gravity: "top", // `top` or `bottom`
                    position: "center", // `left`, `center` or `right`
                    stopOnFocus: true, // Prevents dismissing of toast on hover
                    style: {
                        background: background,
                    },
                    onClick: function(){} // Callback after click
                }).showToast();
                
                setTimeout(() => {
                    location.reload();
                }, "2000")
            }
        });
      })
    })
</script>